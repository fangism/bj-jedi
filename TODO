TODO list:

compute 5-card charlie variations

standard analysis:
	add variance analysis

analyze Blackjack Switch
	when to switch (tables)

BUGS: (run out of cards?)
Dealer plays...
deck_state.cc:120: failed assertion `cards[r]'
Abort
	I think this happens when drawing randomly
	from the deck when a hole card has been reserved, but not counted.
	We need to adjust for the removed hole-card so that it is not 
	removed twice by accident.  Thus there are hidden odds.
	Now fixed:  Random selection happens accounting for the 
	removed hole card.

analysis:
impact of using a fixed (basic) strategy in different count situations
	imperfections of strategies (betting correlation)
instead of infinite deck, compute finite deck edges (without replacement)
	could do on-demand exact calculation as each situation
	comes up, instead of for every dealer reveal card, 
	and every player hand.

card randomization:
alternatively, std::shuffle entire sequence up front
	this avoids repeated call to RNG,
	but makes it difficult to edit the deck.

simulator/analyzer:
I/O: option to read raw character w/o hitting return (ncurses UI)
logging
track statistics
preset options for rules
save/restore state/accounts
define/use API for hooking up custom strategies
define/use API for hooking up different UIs (stdio, ncurses)
	factor out current (CLI) interface into libbj-cli
add robot players: play styles [perfect, basic, near-perfect, n00b]
option for infinite deck (replace every card)
	almost the same as continuous shuffle

options:
show overall edge given exact count (accumulate)
support different counting schemes besides hi-lo
silent auto-play option for simulations (speed)
betting: auto-change bet amount according to conditions
	based on true count or true edge.
	set betting granularity.

struct history {
to track every situation and decision?
situations to review? bookmark as a player-choice option
auto-save "wrong" decisions
}

commands:
play-option::TMI: too much information
compare basic vs. dynamic strategy
auto-play-until-count (falls below, based on true-count)

quiz count: after every hand, or at reshuffle time, or periodically

command-line options:
paths to search for config/save/load files?

test cases:
using basic vs. dynamic strategy
sensitivity analysis of dynamic strategy and edges

library:
	export interfaces to: python, octave, guile, etc...
	using swig
	needs well-defined API

paper:
write an academic paper on results
	second-order covariant sensitivity analysis
	discuss betting strategies, Kelly criterion
betting correlation (efficiency of counting systems)
